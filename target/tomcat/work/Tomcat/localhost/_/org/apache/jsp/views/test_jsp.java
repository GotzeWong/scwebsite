/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-10-11 07:32:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("    <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("    <title>源代码科技</title>\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <meta name=\"description\" content=\"\">\n");
      out.write("    <meta name=\"keywords\" content=\"\">\n");
      out.write("    <meta name=\"author\" content=\"\">\n");
      out.write("\n");
      out.write("    <link href=\"/css/subPage.css\" rel=\"stylesheet\">\n");
      out.write("    <script src=\"/js/jquery/jquery-2.0.3.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("$(document).ready(function(){\n");
      out.write("  $(\"#scrollDiv\").Scroll({line:1,speed:500,timer:2000,up:\"but_up\",down:\"but_down\"});\n");
      out.write("});\n");
      out.write("/*\n");
      out.write("jQ向上滚动带上下翻页按钮\n");
      out.write("*/\n");
      out.write("(function($){\n");
      out.write("$.fn.extend({\n");
      out.write("    Scroll:function(opt,callback){\n");
      out.write("        //参数初始化\n");
      out.write("        if(!opt) var opt={};\n");
      out.write("        var _btnUp = $(\"#\"+ opt.up);//Shawphy:向上按钮\n");
      out.write("        var _btnDown = $(\"#\"+ opt.down);//Shawphy:向下按钮\n");
      out.write("        var timerID;\n");
      out.write("        var _this=this.eq(0).find(\"ul:first\");\n");
      out.write("        var   lineH=_this.find(\"li:first\").height(), //获取行高,此处行高固定但是当文字伟一行或者两行时，要动态获取吧？？\n");
      out.write("            line=opt.line?parseInt(opt.line,10):parseInt(this.height()/lineH,10), //每次滚动的行数，默认为一屏，即父容器高度\n");
      out.write("            speed=opt.speed?parseInt(opt.speed,10):500; //卷动速度，数值越大，速度越慢（毫秒）\n");
      out.write("            timer=opt.timer //?parseInt(opt.timer,10):3000; //滚动的时间间隔（毫秒）\n");
      out.write("        if(line==0) line=1;\n");
      out.write("        var upHeight=0-line*lineH;\n");
      out.write("        //滚动函数\n");
      out.write("        var scrollUp=function(){\n");
      out.write("            _btnUp.unbind(\"click\",scrollUp); //Shawphy:取消向上按钮的函数绑定\n");
      out.write("            _this.animate({\n");
      out.write("              //当滚动的元素height为max-height时，实时获取元素height\n");
      out.write("                marginTop:-_this.find(\"li:first\").height()\n");
      out.write("            },speed,function(){\n");
      out.write("                // for(i=1;i<=line;i++){\n");
      out.write("                //     _this.find(\"li:first\").appendTo(_this);\n");
      out.write("                // }\n");
      out.write("                _this.find(\"li:first\").appendTo(_this);\n");
      out.write("                _this.css({marginTop:0});\n");
      out.write("                _btnUp.bind(\"click\",scrollUp); //Shawphy:绑定向上按钮的点击事件\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("        //Shawphy:向下翻页函数\n");
      out.write("        var scrollDown=function(){\n");
      out.write("            _btnDown.unbind(\"click\",scrollDown);\n");
      out.write("            for(i=1;i<=line;i++){\n");
      out.write("                _this.find(\"li:last\").show().prependTo(_this);\n");
      out.write("            }\n");
      out.write("            _this.css({marginTop:-_this.find(\"li:first\").height()});\n");
      out.write("            _this.animate({\n");
      out.write("                marginTop:0\n");
      out.write("            },speed,function(){\n");
      out.write("                _btnDown.bind(\"click\",scrollDown);\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("        //Shawphy:自动播放\n");
      out.write("        var autoPlay = function(){\n");
      out.write("            if(timer)timerID = window.setInterval(scrollUp,timer);\n");
      out.write("        };\n");
      out.write("        var autoStop = function(){\n");
      out.write("            if(timer)window.clearInterval(timerID);\n");
      out.write("        };\n");
      out.write("         //鼠标事件绑定\n");
      out.write("        _this.hover(autoStop,autoPlay).mouseout();\n");
      out.write("        _btnUp.css(\"cursor\",\"pointer\").click( scrollUp ).hover(autoStop,autoPlay);//Shawphy:向上向下鼠标事件绑定\n");
      out.write("        _btnDown.css(\"cursor\",\"pointer\").click( scrollDown ).hover(autoStop,autoPlay);\n");
      out.write("    }\n");
      out.write("})\n");
      out.write("})(jQuery);\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("   \n");
      out.write("   <div class=\"scrollbox\">\n");
      out.write("\t\t\t\t\t\t\t<div id=\"scrollDiv\">\n");
      out.write("\t\t\t\t\t\t\t  <ul>\n");
      out.write("\t\t\t\t\t\t\t    <li><h3>人体植入微型芯片：坚决抗拒的你，未来会感叹“真香”吗？</h3><h5>24分钟前 </h5></li>\n");
      out.write("\t\t\t\t\t\t\t    <li><h3>华为战略市场总裁徐文伟：目标3年发展100万AI合作伙伴</h3> <h5>30分钟前 </h5></li>\n");
      out.write("\t\t\t\t\t\t\t    <li><h3>华为公布AI战略，欲占据技术生态制高点，超英伟达和谷歌</h3> <h5>20小时前 </h5></li>\n");
      out.write("\t\t\t\t\t\t\t    <li><h3>传华为将推适应端到云的AI解决方案，AI生态布局初显</h3> <h5> 2018-09-27 </h5></li>\n");
      out.write("\t\t\t\t\t\t\t    <li><h3>Face ID VS 屏幕指纹，谁更适合未来手机的发展？</h3> <h5>2018-09-21 </h5></li>\n");
      out.write("\t\t\t\t\t\t\t    <li><h3>中银国际评美股暴跌：中国股市短期将受波及</h3> <h5>2018-09-11 </h5></li>\n");
      out.write("\t\t\t\t\t\t\t  </ul>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("   \n");
      out.write("   \n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
